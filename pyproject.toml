[tool.pyright]
include = ["temply", "scripts"]
pythonVersion = "3.11"
pythonPlatform = "All"
typeCheckingMode = "standard"

[project]
name = "temply"
version = "0.7.5-dev"
description = "Render jinja2 templates on the command line with shell environment variables."
authors = [
    { name = "Adrien Mannocci", email = "adrien.mannocci@gmail.com" }
]
license = { text = "Apache-2.0" }
readme = "README.md"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11,<3.14"
dependencies = [
    "click>=8.1.7", # BSD
    "jinja2>=3.1.4", # BSD
    "PyYAML>=6.0.2", # MIT
]

[project.urls]
Repository = "https://github.com/amannocci/temply"
Documentation = "https://github.com/amannocci/temply"
Changelog = "https://github.com/amannocci/temply/CHANGELOG.md"
Tracker = "https://github.com/amannocci/temply/issues"

[project.scripts]
temply = "temply.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "poethepoet>=0.32.2", # MIT
    "pyinstaller>=6.13.0", # GPL-2.0: https://pyinstaller.org/en/stable/license.html
    "pytest>=8.3.5", # MIT
    "ruff>=0.11.5", # MIT
    "sh>=2.1.0", # MIT
]

[tool.poe.tasks."env:configure"]
help = "Setup environment."
script = "scripts.env:configure"

[tool.poe.tasks."env:wipe"]
shell = """
import shutil

for path in ["build", "dist"]:
    try:
        shutil.rmtree(path)
    except FileNotFoundError:
        print(f"Skipping {path} deletion...")
"""
help = "Wipe project environment."
interpreter = "python"

[tool.poe.tasks."project:upgrade"]
help = "Upgrade project dependencies."
sequence = [
    { cmd = "uv sync -U" },
    { cmd = "pre-commit autoupdate" },
]

[tool.poe.tasks.generate]
help = "Generate configuration files."
script = "scripts.generate:run"

[tool.poe.tasks.lint]
help = "Lint code project."
cmd = "ruff check temply"

[tool.poe.tasks.fmt]
help = "Format code project."
sequence = [
    { cmd = "ruff check --select I --fix" },
    { cmd = "ruff format" },
]

[tool.poe.tasks.build]
deps = ["env:wipe"]
help = "Build standalone binary."
script = "scripts.build:run"

[tool.poe.tasks.test]
help = "Run all tests."
cmd = "pytest tests"

[tool.poe.tasks."package:deb"]
control.expr = "sys.platform"
help = "Build debian packages."

[[tool.poe.tasks."package:deb".switch]]
case = "linux"
script = "scripts.package:deb"

[tool.poe.tasks."package:rpm"]
control.expr = "sys.platform"
help = "Build rpm packages."

[[tool.poe.tasks."package:rpm".switch]]
case = "linux"
script = "scripts.package:rpm"

[tool.poe.tasks."release:pre"]
help = "Create a PR with changes for release."
script = "scripts.release:pre"

[tool.poe.tasks."release"]
help = "Create a new temply release."
script = "scripts.release:run"

[tool.poe.tasks."release:post"]
help = "Prepare next iteration."
script = "scripts.release:post"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["temply"]
