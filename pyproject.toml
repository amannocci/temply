[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.pyright]
include = ["temply", "scripts"]
pythonVersion = "3.11"
pythonPlatform = "All"
typeCheckingMode = "standard"

[tool.poetry]
name = "temply"
version = "0.7.5-dev"
description = "Render jinja2 templates on the command line with shell environment variables."
authors = ["Adrien Mannocci <adrien.mannocci@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/amannocci/temply"
documentation = "https://github.com/amannocci/temply"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
]
packages = [{ include = "temply" }]

[tool.poetry.scripts]
temply = "temply.temply:main"

[tool.poetry.urls]
"Changelog" = "https://github.com/amannocci/temply/CHANGELOG.md"
"Tracker" = "https://github.com/amannocci/temply/issues"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
click = "^8.1.8"        # BSD
jinja2 = "^3.1.5"       # BSD
PyYAML = "^6.0.2"       # MIT

[tool.poetry.group.build.dependencies]
pyinstaller = "^6.11.1"     # GPL 2.0
sh = "^2.1.0"               # MIT

[tool.poetry.group.dev.dependencies]
black = "^24.10.0"           # MIT
pylint = "^3.3.2"           # GPL 2.0
pytest = "^8.3.4"           # MIT

[tool.poe.tasks."env:configure"]
help = "Setup environment."
script = "scripts.env:configure"

[tool.poe.tasks."project:upgrade"]
help = "Upgrade project dependencies."
sequence = [
    { cmd = "poetry up --latest" },
    { cmd = "pre-commit autoupdate" },
]

[tool.poe.tasks.wipe]
shell = """
import shutil

for path in ["build", "dist"]:
    try:
        shutil.rmtree(path)
    except FileNotFoundError as err:
        print(f"Skipping {path} deletion...")
"""
help = "Wipe project environment."
interpreter = "python"

[tool.poe.tasks.generate]
help = "Generate configuration files."
script = "scripts.generate:run"

[tool.poe.tasks.lint]
help = "Lint code project."
cmd = "pylint temply"

[tool.poe.tasks.fmt]
help = "Format code project."
sequence = [
    { cmd = "isort temply tests scripts" },
    { cmd = "black temply tests scripts" },
]

[tool.poe.tasks.build]
deps = ["wipe"]
help = "Build standalone binary."
script = "scripts.build:run"

[tool.poe.tasks.test]
help = "Run all tests."
cmd = "pytest tests"

[tool.poe.tasks."release:pre"]
help = "Create a PR with changes for release."
script = "scripts.release:pre"

[tool.poe.tasks."release"]
help = "Create a new temply release."
script = "scripts.release:run"

[tool.poe.tasks."release:post"]
help = "Prepare next iteration."
script = "scripts.release:post"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
